{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["var $1f0dc3b9307be026$exports = {};\n//Hero modal//\n// (() => {\n//   const mobileMenu = document.querySelector('.js-menu-container');\n//   const openMenuBtn = document.querySelector('.js-open-menu');\n//   const closeMenuBtn = document.querySelector('.js-close-menu');\n//   const toggleMenu = () => {\n//     const isMenuOpen =\n//       openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n//     openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n//     mobileMenu.classList.toggle('is-open');\n//     const scrollLockMethod = !isMenuOpen\n//       ? 'disableBodyScroll'\n//       : 'enableBodyScroll';\n//     bodyScrollLock[scrollLockMethod](document.body);\n//   };\n//   openMenuBtn.addEventListener('click', toggleMenu);\n//   closeMenuBtn.addEventListener('click', toggleMenu);\n//   // Close the mobile menu on wider screens if the device orientation changes\n//   window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n//     if (!e.matches) return;\n//     mobileMenu.classList.remove('is-open');\n//     openMenuBtn.setAttribute('aria-expanded', false);\n//     bodyScrollLock.enableBodyScroll(document.body);\n//   });\n// })();\n//topseller//\n$(\"#mobile_code\").intlTelInput({\n    initialCountry: \"in\",\n    separateDialCode: true,\n    utilsScript: \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/11.0.4/js/utils.js\"\n});\nconst $1f0dc3b9307be026$var$btnElList = document.querySelectorAll(\".ts-chocolate\");\n$1f0dc3b9307be026$var$btnElList.forEach((btnEl)=>{\n    btnEl.addEventListener(\"click\", ()=>{\n        btnEl.classList.toggle(\"ts-btn\");\n    });\n});\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\")\n    };\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n// Review modal//\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open-review]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close-review]\"),\n        modal: document.querySelector(\"[data-modal-review]\")\n    };\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\nvar $1f0dc3b9307be026$var$swiper = new Swiper(\".mySwiper\", {\n    slidesPerView: 3,\n    spaceBetween: 20,\n    slidesPerGroup: 1,\n    loop: true,\n    fade: true,\n    centerSlider: true,\n    grabCursor: true,\n    pagination: {\n        el: \".swiper-pagination\",\n        clickable: true,\n        dynamicBullets: true\n    },\n    navigation: {\n        nextEl: \".swiper-button-next\",\n        prevEl: \".swiper-button-prev\"\n    },\n    breakpoints: {\n        0: {\n            slidesPerView: 1\n        },\n        768: {\n            slidesPerView: 2\n        },\n        1200: {\n            slidesPerView: 3\n        }\n    }\n});\n//Our Products//\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const cardsContainer = document.querySelector(\".our-products-container\");\n    const cards = document.querySelectorAll(\".card\");\n    const dotNavigation = document.querySelector(\".dot-navigation\");\n    const dots = document.querySelectorAll(\".dot\");\n    const cardCount = cards.length;\n    let currentIndex = 0;\n    let isDragging = false;\n    let startX;\n    function showCards(index) {\n        cards.forEach((card, i)=>{\n            const newIndex = (i + index) % cardCount;\n            card.style.display = i >= index && i < index + 4 ? \"block\" : \"none\";\n        });\n    }\n    function updateDots(index) {\n        dots.forEach((dot, i)=>{\n            dot.classList.toggle(\"active\", i === index / 4);\n        });\n    }\n    function showNextCards() {\n        currentIndex = (currentIndex + 4) % cardCount;\n        cardsContainer.style.transition = \"left 0.5s ease-in-out\";\n        cardsContainer.style.left = `-${currentIndex * 100}%`;\n        showCards(currentIndex);\n        updateDots(currentIndex);\n    }\n    function showPrevCards() {\n        currentIndex = (currentIndex - 4 + cardCount) % cardCount;\n        cardsContainer.style.transition = \"left 0.5s ease-in-out\";\n        cardsContainer.style.left = `-${currentIndex * 100}%`;\n        showCards(currentIndex);\n        updateDots(currentIndex);\n    }\n    document.querySelector(\".prev-button\").addEventListener(\"click\", ()=>{\n        showPrevCards();\n        setTimeout(()=>{\n            cardsContainer.style.transition = \"\"; // Reset transition after animation\n        }, 500);\n    });\n    document.querySelector(\".next-button\").addEventListener(\"click\", ()=>{\n        showNextCards();\n        setTimeout(()=>{\n            cardsContainer.style.transition = \"\"; // Reset transition after animation\n        }, 500);\n    });\n    cardsContainer.addEventListener(\"mousedown\", (e)=>{\n        isDragging = true;\n        startX = e.clientX;\n    });\n    document.addEventListener(\"mousemove\", (e)=>{\n        if (isDragging) {\n            const deltaX = e.clientX - startX;\n            const threshold = 50; // Adjust this threshold as needed\n            if (deltaX > threshold) {\n                showPrevCards();\n                startX = e.clientX;\n            } else if (deltaX < -threshold) {\n                showNextCards();\n                startX = e.clientX;\n            }\n        }\n    });\n    document.addEventListener(\"mouseup\", ()=>{\n        isDragging = false;\n        setTimeout(()=>{\n            cardsContainer.style.transition = \"\"; // Reset transition after dragging\n        }, 500);\n    });\n    function highlightDot(index) {\n        dots.forEach((dot, i)=>{\n            dot.classList.toggle(\"active\", i === index);\n        });\n    }\n    cards.forEach((card, i)=>{\n        card.addEventListener(\"mouseover\", ()=>{\n            const cardIndex = (currentIndex + i) % cardCount;\n            highlightDot(cardIndex);\n        });\n        card.addEventListener(\"mouseout\", ()=>{\n            highlightDot(currentIndex);\n        });\n    });\n    // Initial display\n    showCards(currentIndex);\n    updateDots(currentIndex);\n});\n//subscribe modal//\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open-subscribe]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close-subscribe]\"),\n        modal: document.querySelector(\"[data-modal-subscribe]\")\n    };\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n//# sourceMappingURL=index.cda03a3a.js.map\n","//Hero modal//\n// (() => {\n//   const mobileMenu = document.querySelector('.js-menu-container');\n//   const openMenuBtn = document.querySelector('.js-open-menu');\n//   const closeMenuBtn = document.querySelector('.js-close-menu');\n\n//   const toggleMenu = () => {\n//     const isMenuOpen =\n//       openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n//     openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n//     mobileMenu.classList.toggle('is-open');\n\n//     const scrollLockMethod = !isMenuOpen\n//       ? 'disableBodyScroll'\n//       : 'enableBodyScroll';\n//     bodyScrollLock[scrollLockMethod](document.body);\n//   };\n\n//   openMenuBtn.addEventListener('click', toggleMenu);\n//   closeMenuBtn.addEventListener('click', toggleMenu);\n\n//   // Close the mobile menu on wider screens if the device orientation changes\n//   window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n//     if (!e.matches) return;\n//     mobileMenu.classList.remove('is-open');\n//     openMenuBtn.setAttribute('aria-expanded', false);\n//     bodyScrollLock.enableBodyScroll(document.body);\n//   });\n// })();\n\n//topseller//\n\n$(\"#mobile_code\").intlTelInput({\n\tinitialCountry: \"in\",\n\tseparateDialCode: true,\n\tutilsScript: \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/11.0.4/js/utils.js\"\n});\n\nconst btnElList = document.querySelectorAll('.ts-chocolate');\n\nbtnElList.forEach(btnEl => {\n    btnEl.addEventListener('click', () => {\n        btnEl.classList.toggle('ts-btn');\n    });\n});\n\n(() => {\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n// Review modal//\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open-review]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close-review]\"),\n    modal: document.querySelector(\"[data-modal-review]\"),\n  };\n\n  refs.openModalBtn.addEventListener(\"click\", toggleModal);\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle(\"is-hidden\");\n  }\n})();\n\nvar swiper = new Swiper(\".mySwiper\", {\n    slidesPerView: 3,\n    spaceBetween: 20,\n    slidesPerGroup: 1,\n    loop: true,\n    fade:true,\n    centerSlider: true,\n    grabCursor: true,\n    pagination: {\n      el: \".swiper-pagination\",\n      clickable: true,\n      dynamicBullets: true,\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    breakpoints:{\n      0:{\n         slidesPerView: 1,\n      },\n      768:{\n        slidesPerView: 2,\n      },\n      1200: {\n        slidesPerView: 3,\n      },\n  }\n  });\n\n//Our Products//\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n        const cardsContainer = document.querySelector('.our-products-container');\n        const cards = document.querySelectorAll('.card');\n        const dotNavigation = document.querySelector('.dot-navigation');\n        const dots = document.querySelectorAll('.dot');\n        const cardCount = cards.length;\n        let currentIndex = 0;\n        let isDragging = false;\n        let startX;\n\n        function showCards(index) {\n            cards.forEach((card, i) => {\n                const newIndex = (i + index) % cardCount;\n                card.style.display = i >= index && i < index + 4 ? 'block' : 'none';\n            });\n        }\n\n        function updateDots(index) {\n            dots.forEach((dot, i) => {\n                dot.classList.toggle('active', i === index / 4);\n            });\n        }\n\n        function showNextCards() {\n            currentIndex = (currentIndex + 4) % cardCount;\n            cardsContainer.style.transition = 'left 0.5s ease-in-out';\n            cardsContainer.style.left = `-${currentIndex * 100}%`;\n            showCards(currentIndex);\n            updateDots(currentIndex);\n        }\n\n        function showPrevCards() {\n            currentIndex = (currentIndex - 4 + cardCount) % cardCount;\n            cardsContainer.style.transition = 'left 0.5s ease-in-out';\n            cardsContainer.style.left = `-${currentIndex * 100}%`;\n            showCards(currentIndex);\n            updateDots(currentIndex);\n        }\n\n        document.querySelector('.prev-button').addEventListener('click', () => {\n            showPrevCards();\n            setTimeout(() => {\n                cardsContainer.style.transition = ''; // Reset transition after animation\n            }, 500);\n        });\n\n        document.querySelector('.next-button').addEventListener('click', () => {\n            showNextCards();\n            setTimeout(() => {\n                cardsContainer.style.transition = ''; // Reset transition after animation\n            }, 500);\n        });\n\n        cardsContainer.addEventListener('mousedown', (e) => {\n            isDragging = true;\n            startX = e.clientX;\n        });\n\n        document.addEventListener('mousemove', (e) => {\n            if (isDragging) {\n                const deltaX = e.clientX - startX;\n                const threshold = 50; // Adjust this threshold as needed\n                if (deltaX > threshold) {\n                    showPrevCards();\n                    startX = e.clientX;\n                } else if (deltaX < -threshold) {\n                    showNextCards();\n                    startX = e.clientX;\n                }\n            }\n        });\n\n        document.addEventListener('mouseup', () => {\n            isDragging = false;\n            setTimeout(() => {\n                cardsContainer.style.transition = ''; // Reset transition after dragging\n            }, 500);\n        });\n\n        function highlightDot(index) {\n            dots.forEach((dot, i) => {\n                dot.classList.toggle('active', i === index);\n            });\n        }\n\n        cards.forEach((card, i) => {\n            card.addEventListener('mouseover', () => {\n                const cardIndex = (currentIndex + i) % cardCount;\n                highlightDot(cardIndex);\n            });\n\n            card.addEventListener('mouseout', () => {\n                highlightDot(currentIndex);\n            });\n        });\n\n        // Initial display\n        showCards(currentIndex);\n        updateDots(currentIndex);\n});\n    \n//subscribe modal//\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open-subscribe]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close-subscribe]\"),\n    modal: document.querySelector(\"[data-modal-subscribe]\"),\n  };\n  refs.openModalBtn.addEventListener(\"click\", toggleModal);\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n  function toggleModal() {\n    refs.modal.classList.toggle(\"is-hidden\");\n  }\n})();\n"],"names":["$","intlTelInput","initialCountry","separateDialCode","utilsScript","$1f0dc3b9307be026$var$btnElList","document","querySelectorAll","forEach","btnEl","addEventListener","classList","toggle","refs","openModalBtn","querySelector","closeModalBtn","modal","toggleModal","Swiper","slidesPerView","spaceBetween","slidesPerGroup","loop","fade","centerSlider","grabCursor","pagination","el","clickable","dynamicBullets","navigation","nextEl","prevEl","breakpoints","startX","cardsContainer","cards","dots","cardCount","length","currentIndex","isDragging","showCards","index","card","i","style","display","updateDots","dot","showNextCards","transition","left","showPrevCards","highlightDot","setTimeout","e","clientX","deltaX"],"version":3,"file":"index.cda03a3a.js.map"}